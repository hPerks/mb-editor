//--- OBJECT WRITE BEGIN ---
new SimGroup() {

   new Sky() {
      position = "336 136 0";
      rotation = "1.0 0.0 0.0 0";
      scale = "1 1 1";
      visibleDistance = "500";
      useSkyTextures = "1";
      renderBottomTexture = "1";
      skySolidColor = "0.6 0.6 0.6 1";
      materialList = "~/data/skies_pq/Blender1/blender1.dml";
      windVelocity = "1 0 0";
      windEffectPrecipitation = "0";
      noRenderBans = "1";
   };

   new Sun() {
      direction = "0.5 0.5 -0.5";
      color = "1.4 1.2 0.4 1";
      ambient = "0.3 0.3 0.4 1";
   };

   new ScriptObject(MissionInfo) {
      name = "Example Mission";
      game = "PQ";
      author = "hPerks";
      type = "Custom";
      level = "1";
      desc = "Showcasing some of the features in my text-based MB level maker.";
      startHelpText = "";
      music = "Good To Jump To.ogg";
      gameMode = "Normal";
      platinumTime = "25000";
      ultimateTime = "18000";
      awesomeTime = "15500";
   };

   new StaticShape(StartPoint) {
      position = "0 0 0";
      rotation = "1.0 0.0 0.0 0";
      scale = "1 1 1";
      datablock = "StartPad_PQ";
   };

   new InteriorInstance() {
      position = "0 0 0";
      rotation = "1.0 0.0 0.0 0";
      scale = "1 1 1";
      interiorFile = "~/data/interiors_pq/exampleMission.dif";
   };

   new Item() {
      position = "0 3 0";
      rotation = "1.0 0.0 0.0 0";
      scale = "1 1 1";
      collideable = "0";
      static = "1";
      rotate = "1";
      datablock = "SuperJumpItem_PQ";
   };

   new Trigger() {
      position = "-4.5 -4.5 0";
      rotation = "1.0 0.0 0.0 0";
      scale = "8.5 8.5 4";
      polyhedron = "0 0 0 1 0 0 0 1 0 0 0 1";
      datablock = "HelpTrigger";
      text = "Items are placed with a single tiny line of code, and customized however much you want.";
   };

   new Item() {
      position = "-4 16 6.5";
      rotation = "1.0 0.0 0.0 0";
      scale = "1 1 1";
      collideable = "0";
      static = "1";
      rotate = "1";
      datablock = "TimeTravelItem_PQ";
      timeBonus = "2000";
   };

   new Item() {
      position = "11 12 7";
      rotation = "0.0 -1.0 0.0 90";
      scale = "1 1 1";
      collideable = "0";
      static = "1";
      rotate = "1";
      datablock = "AntiGravityItem_PQ";
   };

   new Item() {
      position = "13 12 19";
      rotation = "0.0 -1.0 0.0 179.99999999999997";
      scale = "1 1 1";
      collideable = "0";
      static = "1";
      rotate = "1";
      datablock = "AntiGravityItem_PQ";
   };

   new Trigger() {
      position = "10 8 6";
      rotation = "1.0 0.0 0.0 0";
      scale = "2 8.5 4";
      polyhedron = "0 0 0 1 0 0 0 1 0 0 0 1";
      datablock = "HelpTrigger";
      text = "There are many tools for handling lists of numbers like positions and rotations. You can even (finally) combine rotations with a simple + sign!";
   };

   new StaticShape() {
      position = "21 -3 18";
      rotation = "1.0 0.0 0.0 0";
      scale = "1.5 1.5 1.5";
      datablock = "RoundBumper_PQ";
   };

   new StaticShape() {
      position = "25 -3 18";
      rotation = "1.0 0.0 0.0 0";
      scale = "1.5 1.5 1.5";
      datablock = "RoundBumper_PQ";
   };

   new StaticShape() {
      position = "23 -1 18";
      rotation = "1.0 0.0 0.0 0";
      scale = "1.5 1.5 1.5";
      datablock = "RoundBumper_PQ";
   };

   new StaticShape() {
      position = "27 -1 18";
      rotation = "1.0 0.0 0.0 0";
      scale = "1.5 1.5 1.5";
      datablock = "RoundBumper_PQ";
   };

   new StaticShape() {
      position = "21 1 18";
      rotation = "1.0 0.0 0.0 0";
      scale = "1.5 1.5 1.5";
      datablock = "RoundBumper_PQ";
   };

   new StaticShape() {
      position = "25 1 18";
      rotation = "1.0 0.0 0.0 0";
      scale = "1.5 1.5 1.5";
      datablock = "RoundBumper_PQ";
   };

   new StaticShape() {
      position = "23 3 18";
      rotation = "1.0 0.0 0.0 0";
      scale = "1.5 1.5 1.5";
      datablock = "RoundBumper_PQ";
   };

   new StaticShape() {
      position = "27 3 18";
      rotation = "1.0 0.0 0.0 0";
      scale = "1.5 1.5 1.5";
      datablock = "RoundBumper_PQ";
   };

   new Trigger() {
      position = "20 -8 18";
      rotation = "1.0 0.0 0.0 0";
      scale = "8.5 16 4";
      polyhedron = "0 0 0 1 0 0 0 1 0 0 0 1";
      datablock = "HelpTrigger";
      text = "Placing multiple similar items is made super easy with functions like copies(), as well as the builtlin loops and list comprehensions in Python.";
   };

   new SimGroup() {

      new PathedInterior() {
         position = "0 0 0";
         rotation = "1.0 0.0 0.0 0";
         scale = "1 1 1";
         datablock = "PathedDefault";
         interiorResource = "platinum/data/interiors_pq/exampleMission.dif";
         interiorIndex = "0";
         initialTargetPosition = "-1";
         basePosition = "0 0 0";
         baseRotation = "1.0 0.0 0.0 0";
         baseScale = "1 1 1";
      };

      new Path() {

         new Marker() {
            position = "0 0 0";
            rotation = "1.0 0.0 0.0 0";
            scale = "1 1 1";
            seqNum = "0";
            msToNext = "3500";
            smoothingType = "Accelerate";
         };

         new Marker() {
            position = "0 0 12";
            rotation = "1.0 0.0 0.0 0";
            scale = "1 1 1";
            seqNum = "1";
            msToNext = "1500";
            smoothingType = "Accelerate";
         };

         new Marker() {
            position = "0 0 0";
            rotation = "1.0 0.0 0.0 0";
            scale = "1 1 1";
            seqNum = "2";
            msToNext = "0";
            smoothingType = "Accelerate";
         };
      };
   };

   new Trigger() {
      position = "12 -16.5 18";
      rotation = "1.0 0.0 0.0 0";
      scale = "8 8.5 12";
      polyhedron = "0 0 0 1 0 0 0 1 0 0 0 1";
      datablock = "HelpTrigger";
      text = "There are quite a few convenient ways to build moving platforms. This one uses the MovingInterior.make() and Path.make_accelerate() builders.";
   };

   new StaticShape() {
      position = "-3 -7 30";
      rotation = "1.0 0.0 0.0 0";
      scale = "1 1 1";
      datablock = "TrapDoor_PQ";
   };

   new StaticShape() {
      position = "-3 -5 30";
      rotation = "1.0 0.0 0.0 0";
      scale = "1 1 1";
      datablock = "TrapDoor_PQ";
   };

   new StaticShape() {
      position = "-3 -3 30";
      rotation = "1.0 0.0 0.0 0";
      scale = "1 1 1";
      datablock = "TrapDoor_PQ";
   };

   new StaticShape() {
      position = "-3 -1 30";
      rotation = "1.0 0.0 0.0 0";
      scale = "1 1 1";
      datablock = "TrapDoor_PQ";
   };

   new StaticShape() {
      position = "-3 1 30";
      rotation = "1.0 0.0 0.0 0";
      scale = "1 1 1";
      datablock = "TrapDoor_PQ";
   };

   new StaticShape() {
      position = "-3 3 30";
      rotation = "1.0 0.0 0.0 0";
      scale = "1 1 1";
      datablock = "TrapDoor_PQ";
   };

   new StaticShape() {
      position = "-3 5 30";
      rotation = "1.0 0.0 0.0 0";
      scale = "1 1 1";
      datablock = "TrapDoor_PQ";
   };

   new StaticShape() {
      position = "-3 7 30";
      rotation = "1.0 0.0 0.0 0";
      scale = "1 1 1";
      datablock = "TrapDoor_PQ";
   };

   new StaticShape() {
      position = "-1 -7 30";
      rotation = "1.0 0.0 0.0 0";
      scale = "1 1 1";
      datablock = "TrapDoor_PQ";
   };

   new StaticShape() {
      position = "-1 -5 30";
      rotation = "1.0 0.0 0.0 0";
      scale = "1 1 1";
      datablock = "TrapDoor_PQ";
   };

   new StaticShape() {
      position = "-1 -3 30";
      rotation = "1.0 0.0 0.0 0";
      scale = "1 1 1";
      datablock = "TrapDoor_PQ";
   };

   new StaticShape() {
      position = "-1 -1 30";
      rotation = "1.0 0.0 0.0 0";
      scale = "1 1 1";
      datablock = "TrapDoor_PQ";
   };

   new StaticShape() {
      position = "-1 1 30";
      rotation = "1.0 0.0 0.0 0";
      scale = "1 1 1";
      datablock = "TrapDoor_PQ";
   };

   new StaticShape() {
      position = "-1 3 30";
      rotation = "1.0 0.0 0.0 0";
      scale = "1 1 1";
      datablock = "TrapDoor_PQ";
   };

   new StaticShape() {
      position = "-1 5 30";
      rotation = "1.0 0.0 0.0 0";
      scale = "1 1 1";
      datablock = "TrapDoor_PQ";
   };

   new StaticShape() {
      position = "-1 7 30";
      rotation = "1.0 0.0 0.0 0";
      scale = "1 1 1";
      datablock = "TrapDoor_PQ";
   };

   new StaticShape() {
      position = "1 -7 30";
      rotation = "1.0 0.0 0.0 0";
      scale = "1 1 1";
      datablock = "TrapDoor_PQ";
   };

   new StaticShape() {
      position = "1 -5 30";
      rotation = "1.0 0.0 0.0 0";
      scale = "1 1 1";
      datablock = "TrapDoor_PQ";
   };

   new StaticShape() {
      position = "1 -3 30";
      rotation = "1.0 0.0 0.0 0";
      scale = "1 1 1";
      datablock = "TrapDoor_PQ";
   };

   new StaticShape() {
      position = "1 -1 30";
      rotation = "1.0 0.0 0.0 0";
      scale = "1 1 1";
      datablock = "TrapDoor_PQ";
   };

   new StaticShape() {
      position = "1 1 30";
      rotation = "1.0 0.0 0.0 0";
      scale = "1 1 1";
      datablock = "TrapDoor_PQ";
   };

   new StaticShape() {
      position = "1 3 30";
      rotation = "1.0 0.0 0.0 0";
      scale = "1 1 1";
      datablock = "TrapDoor_PQ";
   };

   new StaticShape() {
      position = "1 5 30";
      rotation = "1.0 0.0 0.0 0";
      scale = "1 1 1";
      datablock = "TrapDoor_PQ";
   };

   new StaticShape() {
      position = "1 7 30";
      rotation = "1.0 0.0 0.0 0";
      scale = "1 1 1";
      datablock = "TrapDoor_PQ";
   };

   new StaticShape() {
      position = "3 -7 30";
      rotation = "1.0 0.0 0.0 0";
      scale = "1 1 1";
      datablock = "TrapDoor_PQ";
   };

   new StaticShape() {
      position = "3 -5 30";
      rotation = "1.0 0.0 0.0 0";
      scale = "1 1 1";
      datablock = "TrapDoor_PQ";
   };

   new StaticShape() {
      position = "3 -3 30";
      rotation = "1.0 0.0 0.0 0";
      scale = "1 1 1";
      datablock = "TrapDoor_PQ";
   };

   new StaticShape() {
      position = "3 -1 30";
      rotation = "1.0 0.0 0.0 0";
      scale = "1 1 1";
      datablock = "TrapDoor_PQ";
   };

   new StaticShape() {
      position = "3 1 30";
      rotation = "1.0 0.0 0.0 0";
      scale = "1 1 1";
      datablock = "TrapDoor_PQ";
   };

   new StaticShape() {
      position = "3 3 30";
      rotation = "1.0 0.0 0.0 0";
      scale = "1 1 1";
      datablock = "TrapDoor_PQ";
   };

   new StaticShape() {
      position = "3 5 30";
      rotation = "1.0 0.0 0.0 0";
      scale = "1 1 1";
      datablock = "TrapDoor_PQ";
   };

   new StaticShape() {
      position = "3 7 30";
      rotation = "1.0 0.0 0.0 0";
      scale = "1 1 1";
      datablock = "TrapDoor_PQ";
   };

   new Trigger() {
      position = "-4.5 -8 30";
      rotation = "1.0 0.0 0.0 0";
      scale = "8.5 16 4";
      polyhedron = "0 0 0 1 0 0 0 1 0 0 0 1";
      datablock = "HelpTrigger";
      text = "These trapdoors would take ages to make and tweak using either the LE or a normal text editor. Here it's done in one simple line of code, using copies() and Python's range().";
   };

   new Trigger() {
      position = "0 0 0";
      rotation = "1.0 0.0 0.0 0";
      scale = "1 1 1";
      polyhedron = "4 8 30 16 0 6 0 8 0 0 0 4";
      datablock = "HelpTrigger";
      text = "This help trigger is skewed so as to align with the ramp. You can't activate it from below!";
   };

   new Trigger() {
      position = "22.5 4.5 36";
      rotation = "1.0 0.0 0.0 0";
      scale = "3 3 2";
      polyhedron = "0 0 0 1 0 0 0 1 0 0 0 1";
      datablock = "TeleportTrigger";
      destination = "destination";
   };

   new Trigger(destination) {
      position = "24 0 48";
      rotation = "1.0 0.0 0.0 0";
      scale = "1 1 1";
      polyhedron = "0 0 0 1 0 0 0 1 0 0 0 1";
      datablock = "DestinationTrigger";
   };

   new TSStatic() {
      position = "24.0 6.0 36";
      rotation = "1.0 0.0 0.0 0";
      scale = "0.25 0.25 0.25";
      shapeName = "~/data/shapes/teleportpad.dts";
   };

   new Trigger() {
      position = "20 4 36";
      rotation = "1.0 0.0 0.0 0";
      scale = "8.5 12.5 4";
      polyhedron = "0 0 0 1 0 0 0 1 0 0 0 1";
      datablock = "HelpTrigger";
      text = "Friends and the ObjectName type facilitate linking objects, like teleports and destinations. Additional methods such as TeleportTrigger.with_destination() make this even simpler.";
   };

   new Item() {
      position = "24 -6 40";
      rotation = "1.0 0.0 0.0 0";
      scale = "1 1 1";
      collideable = "0";
      static = "1";
      rotate = "1";
      datablock = "NestEgg_PQ";
   };

   new Trigger() {
      position = "22.5 -13.5 40";
      rotation = "1.0 0.0 0.0 0";
      scale = "3 3 2";
      polyhedron = "0 0 0 1 0 0 0 1 0 0 0 1";
      datablock = "TeleportTrigger";
      destination = "destination";
   };

   new TSStatic() {
      position = "24.0 -12.0 40";
      rotation = "1.0 0.0 0.0 0";
      scale = "0.25 0.25 0.25";
      shapeName = "~/data/shapes/teleportpad.dts";
   };

   new StaticShape() {
      position = "12 0 48";
      rotation = "0.0 0.0 -1.0 90";
      scale = "1 1 1";
      datablock = "EndPad_PQ";
   };

   new StaticShape() {
      position = "12 0 52";
      rotation = "1.0 0.0 0.0 0";
      scale = "1 1 1";
      datablock = "RegularFinishLineSign";
   };

   new Trigger() {
      position = "4 -8 48";
      rotation = "1.0 0.0 0.0 0";
      scale = "24 16 4";
      polyhedron = "0 0 0 1 0 0 0 1 0 0 0 1";
      datablock = "HelpTrigger";
      text = "Finally, the autobounds() function adds a bounds trigger to your level automatically. Trying to save your level without a bounds trigger throws an error!";
   };

   new Trigger(Bounds) {
      position = "-24.5 -36.5 -20";
      rotation = "1.0 0.0 0.0 0";
      scale = "71.5 72.5 172";
      polyhedron = "0 0 0 1 0 0 0 1 0 0 0 1";
      datablock = "InBoundsTrigger";
   };
};